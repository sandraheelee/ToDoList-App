[{"C:\\Users\\ejlee\\react-todo-app\\src\\index.js":"1","C:\\Users\\ejlee\\react-todo-app\\src\\App.js":"2","C:\\Users\\ejlee\\react-todo-app\\src\\reportWebVitals.js":"3","C:\\Users\\ejlee\\react-todo-app\\src\\components\\Form.js":"4","C:\\Users\\ejlee\\react-todo-app\\src\\components\\TodoList.js":"5","C:\\Users\\ejlee\\react-todo-app\\src\\components\\Todo.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":1811,"mtime":1609295192119,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1198,"mtime":1609294245966,"results":"11","hashOfConfig":"8"},{"size":440,"mtime":1609294772227,"results":"12","hashOfConfig":"8"},{"size":924,"mtime":1609294055925,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"aqfdzs",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\ejlee\\react-todo-app\\src\\index.js",[],["29","30"],"C:\\Users\\ejlee\\react-todo-app\\src\\App.js",["31"],"C:\\Users\\ejlee\\react-todo-app\\src\\reportWebVitals.js",[],"C:\\Users\\ejlee\\react-todo-app\\src\\components\\Form.js",["32"],"import React from \"react\";\r\n\r\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus}) => {\r\n    //Here I can write javascript code and function\r\n    const inputTextHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setInputText(e.target.value);\r\n    };\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos, {text: inputText, completed: false, id: Math.random() * 1000}\r\n        ])\r\n        \r\n    }\r\n\r\n    const statusHandler = (e) => {\r\n      setStatus(e.target.value);\r\n    }\r\n    return(\r\n        <form>\r\n        <input  value = {inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n        <button onClick = {submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n          <select name=\"todos\" className=\"filter-todo\">\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n\r\n","C:\\Users\\ejlee\\react-todo-app\\src\\components\\TodoList.js",[],"C:\\Users\\ejlee\\react-todo-app\\src\\components\\Todo.js",["33"],"import React from \"react\";\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n    //Events\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n    };\r\n    const completeHandler = () => {\r\n        setTodos(todos.map((item) => {\r\n            if (item.id === todo.id) {\r\n                return {\r\n                    ...item,\r\n                    completed: !item.completed,\r\n                };\r\n            }\r\n            return item;\r\n        })\r\n        );\r\n    };\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={'todo-item ${todo.completed ? \"completed\" : \"\"}'}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todo;",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":23,"column":6,"nodeType":"40","endLine":23,"endColumn":21,"suggestions":"41"},{"ruleId":"42","severity":1,"message":"43","line":17,"column":11,"nodeType":"44","messageId":"45","endLine":17,"endColumn":24},{"ruleId":"46","severity":1,"message":"47","line":22,"column":28,"nodeType":"48","messageId":"49","endLine":22,"endColumn":76},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["52"],"no-unused-vars","'statusHandler' is assigned a value but never used.","Identifier","unusedVar","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [todos, status, filterHandler, saveLocalTodos]",{"range":"55","text":"56"},[578,593],"[todos, status, filterHandler, saveLocalTodos]"]